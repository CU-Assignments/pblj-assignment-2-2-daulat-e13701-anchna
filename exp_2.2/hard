import java.io.*; import java.util.*; 
 class Employee implements Serializable {    int id; 
   String name;     String designation;     double salary; 
 
    Employee(int id, String name, String designation, double salary) {    
      this.id = id;        
      this.name = name;         
      this.designation = designation;        
      this.salary = salary; 
    } 
    @Override     public String toString() {        
      return "ID: " + id + ", Name: " + name + ", Designation: " + designation + ", Salary: " + salary; 
    } 
}  public class Experiment5C { 
    public static void main(String[] args) { 
        List<Employee> employees = new ArrayList<>(); 
        File file = new File("employees.dat"); 
 
        // Load existing employees from file         if (file.exists()) { 
            try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file))) {                
              employees = (ArrayList<Employee>) ois.readObject(); 
            } catch (Exception e) { 
                System.out.println("Error reading file: " + e.getMessage()); 
            } 
        } 
 
        Scanner scanner = new Scanner(System.in); 
         while (true) {             try { 
                System.out.println("\n1. Add an Employee"); 
                System.out.println("2. Display All"); 
                System.out.println("3. Exit"); 
                System.out.print("Enter your choice: "); 
 
                if (!scanner.hasNextInt()) { 
                    System.out.println("Invalid input! Please enter a number.");   
                  scanner.next();  // Clear the invalid input                  
                  continue; 
               } 
               int choice = scanner.nextInt(); 
                scanner.nextLine();  // Consume the newline character 
                 switch (choice) {                     case 1: 
                        System.out.print("Enter Employee ID: ");                         
                   int id = scanner.nextInt();                         
                   scanner.nextLine();  // Consume the newline 
 
                        System.out.print("Enter Employee Name: "); 
                        String name = scanner.nextLine();  
                        System.out.print("Enter Designation: ");                         
                   String designation = scanner.nextLine(); 
 
                        System.out.print("Enter Salary: ");                         
                   double salary = scanner.nextDouble();                         
                   scanner.nextLine();  // Consume the newline 
employees.add(new Employee(id, name, designation, salary)); 
                        System.out.println("Employee added successfully.");  
                        // Save updated list to file 
                        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file))) {                            
                          oos.writeObject(employees); 
                        } catch (IOException e) { 
                            System.out.println("Error writing to file: " + e.getMessage());                         }                         
           break; 
                     case 2: 
                        if (employees.isEmpty()) { 
                            System.out.println("No employees to display."); 
                        } else { 
                            for (Employee emp : employees) { 
                                System.out.println(emp); 
                            }                         }                        
                       break; 
                     case 3: 
                        System.out.println("Exiting the application.");                        
                       scanner.close();                       
                       System.exit(0); 
                       break; 
                    default: 
                        System.out.println("Invalid choice! Please enter 1, 2, or 3."); 
                } 
            } catch (Exception e) { 
                System.out.println("Unexpected error: " + e.getMessage());                
              scanner.nextLine(); // Prevent infinite loop 
            } 
        } 
    } 
} 
